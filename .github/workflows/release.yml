name: Deploy and Release

on:
    push:
      branches:
        - 'test_release'

jobs:
    deploy:
        strategy:
            matrix:
              # OS we can use to run jobs
              os: [ubuntu-latest, macos-latest]

        defaults:
          run:
            shell: bash -el {0}
        permissions:
          checks: write
          pull-requests: write

        runs-on: ${{ matrix.os }}
        # Steps for deploying a release
        steps:
            - name: Checkout Repo
              uses: actions/checkout@v3

            - name: Install Conda Env for Linux
              if: ${{ matrix.os != 'macos-latest' }}
              uses: conda-incubator/setup-miniconda@v2
              with:
                mamba-version: "*"
                channels: conda-forge,defaults
                channel-priority: true
                activate-environment: pzero
                environment-file: envs/std-environment.yml
                python-version: 3.8.16
                auto-activate-base: false

            - name: Install Conda Env for MacOS
              if: ${{ matrix.os == 'macos-latest' }}
              uses: conda-incubator/setup-miniconda@v2
              with:
                mamba-version: "*"
                channels: conda-forge,defaults
                channel-priority: true
                activate-environment: pzero
                environment-file: envs/macos-environment.yml
                python-version: 3.8.16
                auto-activate-base: false

            - name: Make executable Linux
              if: ${{ matrix.os == 'ubuntu-latest' }}
              run: |
                conda activate pzero
                python3 -m pip install shapely
                pyinstaller pzero.spec
                ls

            - name: Make executable MacOs
              if: ${{ matrix.os == 'macos-latest' }}
              run: |
                conda activate pzero
                python3 -m pip install shapely
                pyinstaller pzero-macos.spec
                ls

            - name: check path
              run: |
                cd installers
                ls

            - name: Upload Ubuntu Build
              if: ${{ matrix.os == 'ubuntu-latest' }}
              uses: actions/upload-artifact@v3
              with:
                 name: ${{ matrix.os }} build
                 path: installers/PZero_Linux/pzero


            - name: Upload MacOs Build
              if: ${{ matrix.os == 'macos-latest' }}
              uses: actions/upload-artifact@v3
              with:
                 name: ${{ matrix.os }} build
                 path: installers/PZero_Darwin/pzero